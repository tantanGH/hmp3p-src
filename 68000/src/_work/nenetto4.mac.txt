	.nlist
*
* ------------- nenetto.mac --------------
*
NULL		equ	$00
EOS		equ	$00
BS		equ	$08
Bs		equ	$08
bs		equ	$08
TAB		equ	$09
Tab		equ	$09
tab		equ	$09
LF		equ	$0a
Lf		equ	$0a
lf		equ	$0a
CR		equ	$0d
Cr		equ	$0d
cr		equ	$0d
SB		equ	$1a
Sb		equ	$1a
sb		equ	$1a
EOF		equ	$1a
Eof		equ	$1a
eof		equ	$1a
ESC		equ	$1b
Esc		equ	$1b
esc		equ	$1b
SPACE		equ	$20
SPC		equ	$20
Space		equ	$20
Spc		equ	$20
space		equ	$20
spc		equ	$20
CRTC		equ	$e80000
G_VRAM		equ	$c00000
T_VRAM		equ	$e00000
GPALET		equ	$e82000
TPALET		equ	$e82200

TRUE		equ	1
YES		equ	1
yes		equ	1
FALSE		equ	0
NO		equ	0
no		equ	0

* ------------- ----------- --------------

* ------------- DOS -------------

exit		macro
		DOS	_EXIT
		endm

exit2		macro	code
		move.w	#code,-(SP)
		DOS	EXIT2
		endm

aprint		macro	reg
		move.l	reg,-(sp)
		DOS	_PRINT
		addq.l	#4,sp
		endm

pprint		macro	mes
		move.l	d0,-(sp)
		pea	mes
		DOS	_PRINT
		addq.l	#4,sp
		move.l	(sp)+,d0
		endm

print		macro	mes
		pea	mes
		DOS	_PRINT
		addq.l	#4,sp
		endm

print2		macro	mes
		pea	mes
		DOS	_PRINT
		addq.l	#4,sp
		endm

set_block	macro
		lea.l	$10(a0),a0
		suba.l	a0,a1
		pea.l	(a1)
		pea.l	(a0)
		DOS	_SETBLOCK
		addq.l	#8,sp
		endm

input		macro	inpptr
		pea	inpptr
		move.w	#$a,-(SP)
		DOS	_KFLUSH
		addq.l	#6,SP
		endm

inkey		macro
		move.w	#7,-(SP)
		DOS	_KFLUSH
		addq.l	#2,SP
		endm

inkey2		macro
		move.w	#8,-(SP)
		DOS	_KFLUSH
		addq.l	#2,SP
		endm

clr_kbuf	macro
		clr.w	-(sp)
		DOS	_KFLUSH
		addq.l	#2,sp
		endm

cls		macro
		move.w	#2,-(SP)
		move.w	#10,-(SP)
		DOS	_CONCTRL
		addq.l	#4,SP
		endm

curon		macro
		move.w	#17,-(SP)
		DOS	_CONCTRL
		addq.l	#2,sp
		endm

curoff		macro
		move.w	#18,-(SP)
		DOS	_CONCTRL
		addq.l	#2,sp
		endm

funcon		macro
		move.w	#0,-(sp)
		move.w	#14,-(sp)
		DOS	_CONCTRL
		addq.l	#4,sp
		endm

funcoff		macro
		move.w	#2,-(sp)
		move.w	#14,-(sp)
		DOS	_CONCTRL
		addq.l	#4,sp
		endm

locate		macro	locx,locy
		move.w	#locy,-(SP)
		move.w	#locx,-(SP)
		move.w	#3,-(SP)
		DOS	_CONCTRL
		addq.l	#6,SP
		endm

* ------------- IOCS -------------

to_super	macro
		suba.l	a1,a1
		IOCS	_B_SUPER
		move.l	d0,-(sp)
		endm

to_user		macro	ssp
		movea.l	(sp)+,a1
		IOCS	_B_SUPER
		endm

super		macro	ssp
		suba.l	a1,a1
		IOCS	_B_SUPER
		move.l	d0,ssp
		endm

user		macro	ssp
		movea.l	ssp,a1
		IOCS	_B_SUPER
		endm

b_cls		macro
		move.b	#2,d1
		IOCS	_B_CLR_ST
		endm

b_print		macro	mes
		lea	mes,a1
		IOCS	_B_PRINT
		endm

b_color		macro	pal
		push	d1
		move.w	pal,d1
		IOCS	_B_COLOR
		pop	d1
		endm

b_locate	macro	x,y
		movem.l	d0-d2,-(sp)
		move.w	#x,d1
		move.w	#y,d2
		IOCS	_B_LOCATE
		movem.l	(sp)+,d0-d2
		endm

contrast	macro	num
		move.b	num,d1
		IOCS	_CONTRAST
		endm

keywait		macro
	.local	loop
		movem.l	d0,-(sp)
	loop:	IOCS	_B_KEYINP
		btst	#$f,d0
		bne	loop
		movem.l	(sp)+,d0
		endm

* ------------- etc -------------

di		macro
		ori.w	#$0700,sr
		endm

ei		macro
		andi.w	#$f8ff,sr
		endm

push		macro	regs
		movem.l	regs,-(sp)
		endm

pop		macro	regs
		movem.l	(sp)+,regs
		endm

push_all	macro
		movem.l	d0-d7/a0-a6,-(sp)
		endm

pop_all		macro
		movem.l	(sp)+,d0-d7/a0-a6
		endm

strcpy		macro	str1,str2
	.local	cpyloop
	cpyloop:move.b	(str1)+,(str2)+
		bne	cpyloop
		subq.l	#1,str2
		endm

touper		macro	tupptr
		cmp.b	#'a',tupptr
		bcs	toup_r
		cmp.b	#'z',tupptr
		bhi	toup_r
		sub.b	#$20,tupptr
	.local	toup_r
	toup_r:
		endm

ceq		macro	c_label
	.local	call
	.local	skip
		beq	call
		bra	skip
	call:	bsr	c_label
	skip:
		endm

cne		macro	c_label
	.local	call
	.local	skip
		bne	call
		bra	skip
	call:	bsr	c_label
	skip:
		endm

ccc		macro	c_label
	.local	call
	.local	skip
		bcc	call
		bra	skip
	call:	bsr	c_label
	skip:
		endm

ccs		macro	c_label
	.local	call
	.local	skip
		bcs	call
		bra	skip
	call:	bsr	c_label
	skip:
		endm

cmi		macro	c_label
	.local	call
	.local	skip
		bmi	call
		bra	skip
	call:	bsr	c_label
	skip:
		endm

* ------------- IO -------------

sram_on		macro
		move.b	#$31,$E8E00D
		endm

sram_off	macro
		clr.b	$E8E00D
		endm

vwait		macro	num
	.local	_w_v0
	.local	_w_v1
		move.l	d0,-(sp)
		move.l	#num,d0
	  _w_v0:
		btst	#4,$e88001
		beq	_w_v0
	  _w_v1:btst	#4,$e88001
		bne	_w_v1
		dbra	d0,_w_v0
		move.l	(sp)+,d0
		endm

vwait1		macro
	.local	_w_v0
	.local	_w_v1
	  _w_v0:
		btst	#4,$e88001
		beq	_w_v0
	  _w_v1:btst	#4,$e88001
		bne	_w_v1
		endm

voffwait	macro
	.local	_w_v
	  _w_v:
		btst	#4,$e88001
		bne	_w_v
		endm

vonwait		macro
	.local	_w_v
	  _w_v:
		btst	#4,$e88001
		beq	_w_v
		endm

opmwait		macro
	.local	wait
	wait:	btst.b	#$07,$e90003
		bne.s	wait
		endm

gcls		macro
		ori.b	#%00001111,$e8002b
		bset.b	#1,$e80481
		endm


*
* scsicall.mac  By ねねっと
*
S_RESET		equ	$00
S_SELECT	equ	$01
_02		equ	$02
S_CMDOUT	equ	$03
S_DATAIN	equ	$04
S_DATAOUT	equ	$05
S_STSIN		equ	$06
S_MSGIN		equ	$07
S_MSGOUT	equ	$08
S_PHASE		equ	$09

inquiry		equ	$20
read		equ	$21
write		equ	$22
format		equ	$23
testunit	equ	$24
readcap		equ	$25
readext		equ	$26
writeext	equ	$27
_28		equ	$28
_29		equ	$29
_2A		equ	$2A
rezerounit	equ	$2B
request		equ	$2C
seek		equ	$2D
_2E		equ	$2E
startstop	equ	$2F
_30		equ	$30
reassign	equ	$31
pamedium	equ	$32


SCSI	macro	callname
	moveq.l	#callname,d1
	moveq.l	#$f5,d0
	trap	#15
	endm


*
* iocscall.mac X68k XC Compiler v2.00 Copyright 1990 SHARP/Hudson
*
_B_KEYINP	equ	$00
_B_KEYSNS	equ	$01
_B_SFTSNS	equ	$02
_KEY_INIT	equ	$03
_BITSNS		equ	$04
_TVCTRL		equ	$0c
_LEDMOD		equ	$0d
_TGUSEMD	equ	$0e
_DEFCHR		equ	$0f
_CRTMOD		equ	$10
_CONTRAST	equ	$11
_HSVTORGB	equ	$12
_TPALET		equ	$13
_TCOLOR		equ	$15
_FNTADR		equ	$16
_VRAMGET	equ	$17
_VRAMPUT	equ	$18
_FNTGET		equ	$19
_TEXTGET	equ	$1a
_TEXTPUT	equ	$1b
_CLIPPUT	equ	$1c
_SCROLL		equ	$1d
_B_CURON	equ	$1e
_B_CUROFF	equ	$1f
_B_PUTC		equ	$20
_B_PRINT	equ	$21
_B_COLOR	equ	$22
_B_LOCATE	equ	$23
_B_DOWN_S	equ	$24
_B_UP_S		equ	$25
_B_UP		equ	$26
_B_DOWN		equ	$27
_B_RIGHT	equ	$28
_B_LEFT		equ	$29
_B_CLR_ST	equ	$2a
_B_ERA_ST	equ	$2b
_B_INS		equ	$2c
_B_DEL		equ	$2d
_B_CONSOL	equ	$2e
_B_PUTMES	equ	$2f
_SET232C	equ	$30
_LOF232C	equ	$31
_INP232C	equ	$32
_ISNS232C	equ	$33
_OSNS232C	equ	$34
_OUT232C	equ	$35
_JOYGET		equ	$3b
_INIT_PRN	equ	$3c
_SNSPRN		equ	$3d
_OUTLPT		equ	$3e
_OUTPRN		equ	$3f
_B_SEEK		equ	$40
_B_VERIFY	equ	$41
_B_READDI	equ	$42
_B_DSKINI	equ	$43
_B_DRVSNS	equ	$44
_B_WRITE	equ	$45
_B_READ		equ	$46
_B_RECALI	equ	$47
_B_ASSIGN	equ	$48
_B_WRITED	equ	$49
_B_READID	equ	$4a
_B_BADFMT	equ	$4b
_B_READDL	equ	$4c
_B_FORMAT	equ	$4d
_B_DRVCHK	equ	$4e
_B_EJECT	equ	$4f
_DATEBCD	equ	$50
_DATESET	equ	$51
_TIMEBCD	equ	$52
_TIMESET	equ	$53
_DATEGET	equ	$54
_DATEBIN	equ	$55
_TIMEGET	equ	$56
_TIMEBIN	equ	$57
_DATECNV	equ	$58
_TIMECNV	equ	$59
_DATEASC	equ	$5a
_TIMEASC	equ	$5b
_DAYASC		equ	$5c
_ALARMMOD	equ	$5d
_ALARMSET	equ	$5e
_ALARMGET	equ	$5f
_ADPCMOUT	equ	$60
_ADPCMINP	equ	$61
_ADPCMAOT	equ	$62
_ADPCMAIN	equ	$63
_ADPCMLOT	equ	$64
_ADPCMLIN	equ	$65
_ADPCMSNS	equ	$66
_ADPCMMOD	equ	$67
_OPMSET		equ	$68
_OPMSNS		equ	$69
_OPMINTST	equ	$6a
_TIMERDST	equ	$6b
_VDISPST	equ	$6c
_CRTCRAS	equ	$6d
_HSYNCST	equ	$6e
_PRNINTST	equ	$6f
_MS_INIT	equ	$70
_MS_CURON	equ	$71
_MS_CUROF	equ	$72
_MS_STAT	equ	$73
_MS_GETDT	equ	$74
_MS_CURGT	equ	$75
_MS_CURST	equ	$76
_MS_LIMIT	equ	$77
_MS_OFFTM	equ	$78
_MS_ONTM	equ	$79
_MS_PATST	equ	$7a
_MS_SEL		equ	$7b
_MS_SEL2	equ	$7c
_SKEY_MOD	equ	$7d
_DENSNS		equ	$7e
_ONTIME		equ	$7f
_B_INTVCS	equ	$80
_B_SUPER	equ	$81
_B_BPEEK	equ	$82
_B_WPEEK	equ	$83
_B_LPEEK	equ	$84
_B_MEMSTR	equ	$85
_B_BPOKE	equ	$86
_B_WPOKE	equ	$87
_B_LPOKE	equ	$88
_B_MEMSET	equ	$89
_DMAMOVE	equ	$8a
_DMAMOV_A	equ	$8b
_DMAMOV_L	equ	$8c
_DMAMODE	equ	$8d
_BOOTINF	equ	$8e
_ROMVER		equ	$8f
_G_CLR_ON	equ	$90
_GPALET		equ	$94
_SFTJIS		equ	$a0
_JISSFT		equ	$a1
_AKCONV		equ	$a2
_RMACNV		equ	$a3
_DAKJOB		equ	$a4
_HANJOB		equ	$a5
_OS_CURON	equ	$ae
_OS_CUROF	equ	$af
_APAGE		equ	$b1
_VPAGE		equ	$b2
_HOME		equ	$b3
_WINDOW		equ	$b4
_WIPE		equ	$b5
_PSET		equ	$b6
_POINT		equ	$b7
_LINE		equ	$b8
_BOX		equ	$b9
_FILL		equ	$ba
_CIRCLE		equ	$bb
_PAINT		equ	$bc
_SYMBOL		equ	$bd
_GETGRM		equ	$be
_PUTGRM		equ	$bf
_SP_INIT	equ	$c0
_SP_ON		equ	$c1
_SP_OFF		equ	$c2
_SP_CGCLR	equ	$c3
_SP_DEFCG	equ	$c4
_SP_GTPCG	equ	$c5
_SP_REGST	equ	$c6
_SP_REGGT	equ	$c7
_BGSCRLST	equ	$c8
_BGSCRLGT	equ	$c9
_BGCTRLST	equ	$ca
_BGCTRLGT	equ	$cb
_BGTEXTCL	equ	$cc
_BGTEXTST	equ	$cd
_BGTEXTGT	equ	$ce
_SPALET		equ	$cf
_TXXLINE	equ	$d3
_TXYLINE	equ	$d4
_TXBOX		equ	$d6
_TXFILL		equ	$d7
_TXREV		equ	$d8
_TXRASCPY	equ	$df

_OPMDRV		equ	$f0
*
_SKEYSET	equ	$05
_TPALET2	equ	$14
_ABORTRST	equ	$fd
_IPLERR		equ	$fe
_ABORTJOB	equ	$ff

IOCS	macro	callname
	moveq.l	#callname,d0
	trap	#15
	endm


*
* doscall.mac X68k XC Compiler v2.00 Copyright 1990 SHARP/Hudson
*
* 注意
* RESERVED になっているファンクションコールの処理を変更したり、呼び出したり
* してはいけません。
* $fff0〜$fff2までのファンクション番号は、終了、ＣＴＲＬ＋Ｃ、アボートの
* 処理を_INTVCSによって変更する場合に使用するもので、ファンクションコール
* ではありません。
* また、$fff3〜$ffffまでのファンクションコールは、処理を変更できません。
*
_EXIT		equ	$ff00
_GETCHAR	equ	$ff01
_PUTCHAR	equ	$ff02
_COMINP		equ	$ff03
_COMOUT		equ	$ff04
_PRNOUT		equ	$ff05
_INPOUT		equ	$ff06
_INKEY		equ	$ff07
_GETC		equ	$ff08
_PRINT		equ	$ff09
_GETS		equ	$ff0a
_KEYSNS		equ	$ff0b
_KFLUSH		equ	$ff0c
_FFLUSH		equ	$ff0d
_CHGDRV		equ	$ff0e
_CHDRV		equ	$ff0e
_DRVCTRL	equ	$ff0f
_CONSNS		equ	$ff10
_PRNSNS		equ	$ff11
_CINSNS		equ	$ff12
_COUTSNS	equ	$ff13
*RESERVED		$ff14
*RESERVED		$ff15
*RESERVED		$ff16
_FATCHK		equ	$ff17
*RESERVED		$ff18
_CURDRV		equ	$ff19
_GETSS		equ	$ff1a
_FGETC		equ	$ff1b
_FGETS		equ	$ff1c
_FPUTC		equ	$ff1d
_FPUTS		equ	$ff1e
_ALLCLOSE	equ	$ff1f
_SUPER		equ	$ff20
_FNCKEY		equ	$ff21
_KNJCTRL	equ	$ff22
_CONCTRL	equ	$ff23
_KEYCTRL	equ	$ff24
_INTVCS		equ	$ff25
_PSPSET		equ	$ff26
_GETTIM2	equ	$ff27
_SETTIM2	equ	$ff28
_NAMESTS	equ	$ff29
_GETDATE	equ	$ff2a
_SETDATE	equ	$ff2b
_GETTIME	equ	$ff2c
_SETTIME	equ	$ff2d
_VERIFY		equ	$ff2e
_DUP0		equ	$ff2f
_VERNUM		equ	$ff30
_KEEPPR		equ	$ff31
_GETDPB		equ	$ff32
_BREAKCK	equ	$ff33
_DRVXCHG	equ	$ff34
_INTVCG		equ	$ff35
_DSKFRE		equ	$ff36
_NAMECK		equ	$ff37
_MKDIR		equ	$ff39
_RMDIR		equ	$ff3a
_CHDIR		equ	$ff3b
_CREATE		equ	$ff3c
_OPEN		equ	$ff3d
_CLOSE		equ	$ff3e
_READ		equ	$ff3f
_WRITE		equ	$ff40
_DELETE		equ	$ff41
_SEEK		equ	$ff42
_CHMOD		equ	$ff43
_IOCTRL		equ	$ff44
_DUP		equ	$ff45
_DUP2		equ	$ff46
_CURDIR		equ	$ff47
_MALLOC		equ	$ff48
_MFREE		equ	$ff49
_SETBLOCK	equ	$ff4a
_EXEC		equ	$ff4b
_EXIT2		equ	$ff4c
_WAIT		equ	$ff4d
_FILES		equ	$ff4e
_NFILES		equ	$ff4f
_SETPDB		equ	$ff50
_GETPDB		equ	$ff51
_SETENV		equ	$ff52
_GETENV		equ	$ff53
_VERIFYG	equ	$ff54
_COMMON		equ	$ff55
_RENAME		equ	$ff56
_FILEDATE	equ	$ff57
*_MALLOC2	equ	$ff58
_MAKETMP	equ	$ff5a
_NEWFILE	equ	$ff5b
_LOCK		equ	$ff5c
*RESERVED		$ff5e
_ASSIGN		equ	$ff5f
_MALLOC2	equ	$ff7d
*_S_MALLOC	equ	$ff7d
_MFREE2		equ	$ff7e
*_S_MFREE	equ	$ff7e
_S_PROCESS	equ	$ff7f
_EXITVC		equ	$fff0
_CTRLVC		equ	$fff1
_ERRJVC		equ	$fff2
_DISKRED	equ	$fff3
_DISKWRT	equ	$fff4
_INDOSFLG	equ	$fff5
_SUPER_JSR	equ	$fff6
_BUS_ERR	equ	$fff7
_OPEN_PR	equ	$fff8
_KILL_PR	equ	$fff9
_GET_PR		equ	$fffa
_SUSPEND	equ	$fffb
_SLEEP_PR	equ	$fffc
_SEND_PR	equ	$fffd
_TIME_PR	equ	$fffe
_CHANGE_PR	equ	$ffff

DOS	macro	callname
	dc.w	callname
	endm


*
* fefunc.h X68k XC Compiler v1.01 Copyright 1987 SHARP/Hudson
*
FPACK	macro	callname
	dc.w	callname
	endm

****************************************
__LMUL			EQU	$FE00		d0=d0*d1
__LDIV			EQU	$FE01		d0=d0/d1
__LMOD			EQU	$FE02		d0=d0 mod d1
*			EQU	$FE03
__UMUL			EQU	$FE04		d0=d0*d1
__UDIV			EQU	$FE05		d0=d0/d1
__UMOD			EQU	$FE06		d0=d0 mod d1
*			EQU	$FE07
__IMUL			EQU	$FE08		d0d1=d0*d1
__IDIV			EQU	$FE09		d0ｱﾏﾘd1=d0/d1
*			EQU	$FE0A
*			EQU	$FE0B
__RANDOMIZE		EQU	$FE0C		err=d0(0~65535)
__SRAND			EQU	$FE0D		err=d0(-32768~32767)
__RAND			EQU	$FE0E		d0=rand()
*			EQU	$FE0F
*************************************
__STOL			EQU	$FE10		d0=(a0).１０進
__LTOS			EQU	$FE11		(a0)..=d0
__STOH			EQU	$FE12		d0=(a0).１６進
__HTOS			EQU	$FE13		(a0)..=d0
__STOO			EQU	$FE14		d0=(a0).８進
__OTOS			EQU	$FE15		(a0)..=d0
__STOB			EQU	$FE16		d0=(a0).２進
__BTOS			EQU	$FE17		(a0)..=d0
__IUSING		EQU	$FE18		(a0)..=d0,d1桁
*			EQU	$FE19
*************************************
__LTOD			EQU	$FE1A		d0d1=d0
__DTOL			EQU	$FE1B		d0=d0d1
__LTOF			EQU	$FE1C		d0=d0
__FTOL			EQU	$FE1D		d0=d0
__FTOD			EQU	$FE1E		d0d1=d0
__DTOF			EQU	$FE1F		d0=d0d1
*************************************
__VAL			EQU	$FE20		d0d1=(a0).16/10/8/2進
__USING			EQU	$FE21		(a0)..=d0d1,d2.d3,d4
__STOD			EQU	$FE22		d0d1,d2,d3=(a0)１０進
__DTOS			EQU	$FE23		(a0)..=d0d1
__ECVT			EQU	$FE24		(a0),d0,d1=d0d1,d2全体桁
__FCVT			EQU	$FE25		(a0),d0,d1=d0d1,d2小数点桁
__GCVT			EQU	$FE26		(a0)..=d0d1,d2全体桁
*			EQU	$FE27
*************************************
__DTST			EQU	$FE28		z=d0d1
__DCMP			EQU	$FE29		z,c=d0d1-d2d3
__DNEG			EQU	$FE2A		d0d1=neg(d0d1)
__DADD			EQU	$FE2B		d0d1=d0d1+d2d3
__DSUB			EQU	$FE2C		d0d1=d0d1-d2d3
__DMUL			EQU	$FE2D		d0d1=d0d1*d2d3
__DDIV			EQU	$FE2E		d0d1=d0d1/d2d3
__DMOD			EQU	$FE2F		d0d1=d0d1 mod d2d3
*************************************
__DABS			EQU	$FE30		d0d1=abs(d0d1)
__DCEIL			EQU	$FE31		d0d1=ceil(d0d1)
__DFIX			EQU	$FE32		d0d1=fix(d0d1)
__DFLOOR		EQU	$FE33		d0d1=floor(d0d1)
__DFRAC			EQU	$FE34		d0d1=frac(d0d1)
__DSGN			EQU	$FE35		d0d1=sgn(d0d1)
__SIN			EQU	$FE36		d0d1=sin(d0d1)
__COS			EQU	$FE37		d0d1=cos(d0d1)
__TAN			EQU	$FE38		d0d1=tan(d0d1)
__ATAN			EQU	$FE39		d0d1=atan(d0d1)
__LOG			EQU	$FE3A		d0d1=ln(d0d1)
__EXP			EQU	$FE3B		d0d1=exp(d0d1)
__SQR			EQU	$FE3C		d0d1=sqr(d0d1)
__PI			EQU	$FE3D		d0d1=pi()
__NPI			EQU	$FE3E		d0d1=pi(d0d1)
__POWER			EQU	$FE3F		d0d1=pow(d0d1,d2d3)
__RND			EQU	$FE40		d0d1=rnd()
*			EQU	$FE41
*			EQU	$FE42
*			EQU	$FE43
*			EQU	$FE44
*			EQU	$FE45
*			EQU	$FE46
*			EQU	$FE47
*			EQU	$FE48
__DFREXP		EQU	$FE49		D0D1,D2=D0D1
__DLDEXP		EQU	$FE4A		D0D1=D0D1,D2
__DADDONE		EQU	$FE4B		d0d1=d0d1+1#
__DSUBONE		EQU	$FE4C		d0d1=d0d1-1#
__DDIVTWO		EQU	$FE4D		d0d1=d0d1/2#
__DIEECNV		EQU	$FE4E		d0d1=d0d1
__IEEDCNV		EQU	$FE4F		d0d1=d0d1
*************************************
__FVAL			EQU	$FE50
__FUSING		EQU	$FE51
__STOF			EQU	$FE52
__FTOS			EQU	$FE53
__FECVT			EQU	$FE54
__FFCVT			EQU	$FE55
__FGCVT			EQU	$FE56
*			EQU	$FE57
*************************************
__FTST			EQU	$FE58
__FCMP			EQU	$FE59
__FNEG			EQU	$FE5A
__FADD			EQU	$FE5B
__FSUB			EQU	$FE5C
__FMUL			EQU	$FE5D
__FDIV			EQU	$FE5E
__FMOD			EQU	$FE5F
*************************************
__FABS			EQU	$FE60
__FCEIL			EQU	$FE61
__FFIX			EQU	$FE62
__FFLOOR		EQU	$FE63
__FFRAC			EQU	$FE64
__FSGN			EQU	$FE65
__FSIN			EQU	$FE66
__FCOS			EQU	$FE67
__FTAN			EQU	$FE68
__FATAN			EQU	$FE69
__FLOG			EQU	$FE6A
__FEXP			EQU	$FE6B
__FSQR			EQU	$FE6C
__FPI			EQU	$FE6D
__FNPI			EQU	$FE6E
__FPOWER		EQU	$FE6F
__FRND			EQU	$FE70
*			EQU	$FE71
*			EQU	$FE72
*			EQU	$FE73
*			EQU	$FE74
*			EQU	$FE75
*			EQU	$FE76
*			EQU	$FE77
*			EQU	$FE78
__FFREXP		EQU	$FE79
__FLDEXP		EQU	$FE7A
__FADDONE		EQU	$FE7B
__FSUBONE		EQU	$FE7C
__FDIVTWO		EQU	$FE7D
__FIEECNV		EQU	$FE7E
__IEEFCNV		EQU	$FE7F

__CLMUL			EQU	$FEE0
__CLDIV			EQU	$FEE1
__CLMOD			EQU	$FEE2
__CUMUL			EQU	$FEE3
__CUDIV			EQU	$FEE4
__CUMOD			EQU	$FEE5
__CLTOD			EQU	$FEE6
__CDTOL			EQU	$FEE7
__CLTOF			EQU	$FEE8
__CFTOL			EQU	$FEE9
__CFTOD			EQU	$FEEA
__CDTOF			EQU	$FEEB

__CDCMP			EQU	$FEEC
__CDADD			EQU	$FEED
__CDSUB			EQU	$FEEE
__CDMUL			EQU	$FEEF
__CDDIV			EQU	$FEF0
__CDMOD			EQU	$FEF1
__CFCMP			EQU	$FEF2
__CFADD			EQU	$FEF3
__CFSUB			EQU	$FEF4
__CFMUL			EQU	$FEF5
__CFDIV			EQU	$FEF6
__CFMOD			EQU	$FEF7
__CDTST			EQU	$FEF8
__CFTST			EQU	$FEF9
__CDINC			EQU	$FEFA
__CFINC			EQU	$FEFB
__CDDEC			EQU	$FEFC
__CFDEC			EQU	$FEFD

__FEVARG		EQU	$FEFE	>d0,d1
__FEVECS		EQU	$FEFF	d0,a0>d0
	.list

