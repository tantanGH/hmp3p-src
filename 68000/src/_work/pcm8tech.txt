===============================================================================

	リアルタイム・ＡＤＰＣＭ多重再生ドライバー  "ＰＣＭ８"  version 0.48

				(( 技術資料 ))
							(C) 江藤　啓 1991,92

===============================================================================


-- PCM データ形式について -----------------------------------------------------


	PCM8 が取り扱える PCM データの形式は、以下の３種類です。


　・ADPCM 形式

	通常の ADPCM driver や IOCS 等で扱える形式。
	5 通りの再生周波数を選択出来る。

　・16bit PCM 形式

	データ形式は signed short であり、PCM2PCM.X (by Yatsube.) によって
	生成される形式と同一である。

	PCM8 では、この形式のデータブロックは偶数アドレスから設定され、また
	データの長さも偶数である必要がある。

	同一音長の ADPCM 形式データの４倍のデータ量を必要とする。
	再生周波数は 15.6 kHz 固定。

　・8 bit PCM 形式

	データ形式は signed char であり、D/A変換レベルは 16bit PCM の場合と
	同一である。

	同一音長の ADPCM 形式データの２倍のデータ量を必要とする。
	再生周波数は 15.6 kHz 固定。


-- ＰＣＭ８ファンクションコール ( TRAP #2 ) -----------------------------------


	TRAP #2 を用いて実現しています。

	d0.w に機能コードを設定し、必要であれば他のレジスタに適切な値を設定
	した後、TRAP #2 を発行してください。

	戻り値は d0.l に設定されます。また、他のレジスタは全て保存されます。

	注) 下記の内容は、version 0.48 の時点のものです。
	　　以前のバージョンでは一部動作が異なる場合があります。

----------------------------------------
通常出力		機能コード $000x
----------------------------------------

機能:	単一メモリ領域のデータをＡＤＰＣＭに出力する。

呼出:	d0.w = $0000 + チャネル番号(0〜7)

	d1.l = 音量/周波数/定位

	    bit 23〜16 : 音量 (-1,0〜15) (*1)
		-1 を指定すると以前の値を保持する。
		原音量は 8 。
		1step = 2dB に相当する(-16dB〜+14dB)。

	    bit 15〜 8 : 周波数、データ形式 (-1,0〜4,5,6)
		-1 を指定すると以前の値を保持する。
		0〜4 は ADPCM であり、再生周波数は以下の通り。
		    0 : 3.9KHz	3 : 10.4KHz
		    1 : 5.2KHz	4 : 15.6KHz
		    2 : 7.8KHz
		5 は 16bit PCM , 6 は 8bit PCM である。(*2)
		    これらについては「PCM データ形式について」を参照のこと。

	    bit  7〜 0 : 再生定位 (-1,0〜3)
		-1 を指定すると以前の値を保持する。
		他の値については以下の通り。
		    0 : 停止(*3) 2 : 右出力
		    1 : 左出力	 3 : 左右出力
		なお、定位は全チャネル共通であり、
		0 以外で最後に指定された値が有効となる。

	d2.l = データ長
	    データ形式に拘わらず、バイト単位で指定する。
	    <0 : データ長問い合わせ(機能コード$008xと同等)
	    =0 : チャネル停止(*4)

	a1.l = データブロック先頭アドレス

戻値:	d0.l = 0	正常終了

注意:
(*1)	単音再生モードでは、設定に拘らず原音量で出力される。
(*2)	単音再生モードでは、出力されない。
(*3)	音量/周波数は変更される。定位は変更されない。
(*4)	音量/周波数/定位は変更されない。

----------------------------------------
アレイチェイン出力	機能コード $001x
----------------------------------------

機能:	チェインテーブルによって間接的に指定された複数メモリ領域のデータを
	ＡＤＰＣＭに出力する。

呼出:	d0.w = $0010 + チャネル番号(0〜7)
	d1.l = 音量/周波数/定位
	    >> 通常出力($000x)参照
	d2.l = チェインテーブル個数
	    <0 : データ長問い合わせ(機能コード$008xと同等)
	    =0 : チャネル停止(*4)
	a1.l = チェインテーブル先頭アドレス

	*チェインテーブルについての説明は省略。

戻値:	d0.l = 0	正常終了

----------------------------------------
リンクチェイン出力	機能コード $002x
----------------------------------------

機能:	リンクチェインテーブルによって間接的に指定された複数メモリ領域の
	データをＡＤＰＣＭに出力する。

呼出:	d0.w = $0020 + チャネル番号(0〜7)
	d1.l = 音量/周波数/定位
	    >> 通常出力($000x)参照
	a1.l = リンクチェインテーブル先頭アドレス

	*リンクチェインテーブルについての説明は省略。

戻値:	d0.l = 0	正常終了

----------------------------------------
動作モード変更		機能コード $007x
----------------------------------------

機能:	動作中のチャネルの音量/周波数/定位を変更する。

呼出:	d0.w = $0070 + チャネル番号(0〜7)
	d1.l = 音量/周波数/定位
	    >> 通常出力($000x)参照

戻値:	d0.l = 0	正常終了

----------------------------------------
データ長問い合わせ	機能コード $008x
----------------------------------------

機能:	動作中のチャネルの残りデータ長を取得する。

呼出:	d0.w = $0080 + チャネル番号(0〜7)

戻値:	d0.l = 0	チャネルは停止中
	d0.l > 0	多重再生モードで、通常出力中
			残りのデータ長(byte)を示す。
	d0.l = -1	アレイチェイン出力中
	d0.l = -2	リンクチェイン出力中
	d0.l = -3	単音再生モードで、通常出力中

----------------------------------------
動作モード問い合わせ	機能コード $009x
----------------------------------------

機能:	動作中のチャネルの音量/周波数/定位を取得する。

呼出:	d0.w = $0090 + チャネル番号(0〜7)

戻値:	d0.l = 音量/周波数/定位
	    >> 通常出力($000x)参照
	    定位は常に 1〜3 の値を採る。
	    bit 31〜24 は 0 となる。

----------------------------------------
終了			機能コード $0100
----------------------------------------

機能:	全チャネルのチェイン動作を解除し、現在出力中のデータブロックの出力
	が完了次第、チャネル動作を停止する。

	一時停止中の場合は即座に全チャネルの動作を打ち切る。

呼出:	d0.w = $0100

戻値:	d0.l = 0	正常終了

注意:	即時終了ではない点に十分注意すること。
	即時に完全に終了させたい場合は、一時停止($0101)
	の後、本コールを発行する。
	単音IOCS出力中は、このコールは無視される。

----------------------------------------
一時停止		機能コード $0101
----------------------------------------

機能:	全チャネルの出力を即座に停止し、一時停止状態を開始する。

	一時停止状態でチャネル出力または終了を行うと、全チャネルの動作は打
	ち切られる。

呼出:	d0.w = $0101

戻値:	d0.l = 0	正常終了

注意:	単音IOCS出力中は、このコールは無視される。

----------------------------------------
一時停止解除		機能コード $0102
----------------------------------------

機能:	一時停止状態を解除する。

	打ち切りの後は無効。

呼出:	d0.w = $0102

戻値:	d0.l = 0	正常終了

注意:	単音IOCS出力中は、このコールは無視される。

----------------------------------------
MPU･MFPマスク設定	機能コード $01FB
----------------------------------------

機能:	ＰＣＭ８割込中のＭＰＵ/ＭＦＰ割込マスクを設定する。

呼出:	d0.w = $01FB
	d1.l = 機能/マスク値
	    < 0 : マスク取得のみ
	    >=0 : マスク設定
		bit 18〜16 : MPU  マスク
		bit 15〜 8 : IMRA マスク
		bit  7〜 0 : IMRB マスク

戻値:	d0.l = (変更前の)マスク値
		bit 31〜19 は 0 となる。

注意:	一般のプログラムでは使ってはならない。

	既定値は %011_11011111_00000000 。
	マスクされていない割込処理内からは、ファンクションコールを行っては
	ならない。

	内容を十分理解してから使用すること。

----------------------------------------
多重/単音モードの設定	機能コード $01FC
----------------------------------------

機能:	多重再生を許可/禁止する。

呼出:	d0.w = $01FC
	d1.w = 許可フラグ
	    -1 : 取得のみ
	     0 : 禁止
	     1 : 許可
	     2 : ファンクションコールのみ許可

戻値:	d0.l = 実際の許可状態
	     0 : 禁止中
	     1 : 許可中
	     2 : ファンクションコールのみ許可中

注意:	一般のプログラムでは使ってはならない。

	多重再生禁止中は、ファンクションによる出力は後から行われたものが有
	効となる。更に、IOCS 出力がファンクション出力に優先される。

	本コールは、PCM8 コマンドラインからの許可/禁止とは独立しており、両
	方の設定が"許可"の場合にのみ多重再生モードになる。

	戻り値は両方の設定を反映したものである。

----------------------------------------
(reserved)		機能コード $01FD
----------------------------------------

	本コールは予約されています。

----------------------------------------
占有			機能コード $01FE
----------------------------------------

機能:	ＰＣＭ８を占有し、常駐解除を禁止する。

呼出:	d0.w = $01FE

戻値:	d0.l = 0	占有した
	d0.l = -1	既に占有されている

注意:	一般のプログラムでは使ってはならない。

----------------------------------------
占有解除		機能コード $01FF
----------------------------------------

機能:	ＰＣＭ８の占有を解除し、常駐解除を可能にする。

呼出:	d0.w = $01FF

戻値:	d0.l = 0	占有解除した
	d0.l = -1	占有されていない

注意:	一般のプログラムでは使ってはならない。

----------------------------------------
常駐解除		機能コード $FFFF
----------------------------------------

機能:	ＰＣＭ８の常駐を解除する。

呼出:	d0.w = $FFFF

戻値:	d0.l = 0	常駐解除が実行された
	d0.l = -1	占有されており、解除出来なかった
	d0.l = -2	PCM8で使用している割込ベクタ等が変更されており、解
			除出来なかった

注意:	一般のプログラムでは使ってはならない。

	PCM8で使用しているベクタ類は、以下の７種類である。

	VECTOR=	ADDR===	内容============
	$022	$000088	TRAP #2
	$06A	$0001A8	DMAC ch.3 通常割込
	$06B	$0001AC	DMAC ch.3 エラー割込
	$160	$000580	IOCS _ADPCMOUT
	$162	$000588	IOCS _ADPCMAOT
	$164	$000590	IOCS _ADPCMLOT
	$167	$00059C	IOCS _ADPCMMOD


-- ＩＯＣＳコール ( TRAP #15 )-------------------------------------------------


	ＰＣＭ８ファンクションコールとは別に、従来とほぼ同様な手続きで利用
	できる様に、ＩＯＣＳコールを用意しています。

　サポート対象コール:

	$60 : _ADPCMOUT		チェインなし出力
	$62 : _ADPCMAOT		アレイチェイン出力
	$64 : _ADPCMLOT		リンクアレイチェイン出力
	$67 : _ADPCMMOD		ＡＤＰＣＭ実行制御

	上記以外のADPCM関連コール($61,$63,$65,$66)は、常駐前のままです。

　元のＩＯＣＳとの差異:

　　（多重再生モード）

　　　・前の音が鳴っている内に再度出力を行った場合、出力終了を待たず、他の
	チャネルの出力と合成する。

	この場合、使用していないチャネルを勝手に使用する。捜す方向は後ろか
	ら前へ（チャネル８･７･ ･･･ ･１）。空きのない場合は、チェインなし出
	力中のチャネルの内、残り時間の一番短いものを潰して出力する。
	該当するチャネルが無い場合はコールは無視。

　　　・$60コールで、長さが $FF00 以上でもすぐリターンする。

　　　・パンは、最新の指定に従う。

	先に出力中の残響も影響を受ける。但し、出力カットの指定は完全に無視。

　　　・$67コールの終了指定は、チェイン動作の終了となる。

	現在出力中のデータブロックはそのまま出力される。即時終了する場合は、
	中止指定を行うこと。再開も可能。

	中止指定の後、終了指定または他の音の再生指定を行うと、元の出力は全
	てキャンセルされる。

　　（単音再生モード）

　　　・前の音が鳴っている内に再度出力を行った場合、出力終了を待たず、前の
	音の出力を取り消して出力する。

　　　・$60コールで、長さが $FF00 以上でもすぐリターンする。

　その他:

　　　・IOCS コールでは、16bit PCM , 8bit PCM の出力は出来ません。
　　　・IOCS コールの音量は 8(原音) 固定です。


-- ＰＣＭ８の常駐判定方法 -----------------------------------------------------


	ＰＣＭ８ファンクションコールを使用する場合は、予め常駐判定を行って
	おく必要があります。

	常駐判定には、以下の方式を推奨します。

　方法１: トラップベクタ取得方式

	例外ベクタ$22 ( = ($0088).l ) の内容 ( = TRAP #2 エントリ ) の手前
	８バイトを検査する。

	先頭から５バイトが 'PCM4/' または 'PCM8/' ならば常駐している。その
	後の３バイトはバージョン。 ex) version 0.45 = 'PCM8/045'

	この判定方法は version 0.11 以上の PCM4/8 に対し有効です。

	PCM4 か PCM8 かを確実に判定したい場合は、バージョンで検査して下さい
	( 030 未満は PCM4 )。なお、version 0.40 以降のヘッダは 'PCM8/???'の
	形式に統一されています。

　方法２: ＩＯＣＳコール方式(簡略方式)

	d1.l に 定数 'PCM8' を設定して、IOCS $67(_ADPCMMOD) を発行。戻り値
	d0.l > 0 であれば PCM8 は常駐しており、バージョンは d0.l/100(10進)
	である。

	この判定方法は version 0.45 以上の PCM8 に対し有効です。


-- その他、特記事項 -----------------------------------------------------------


　・OPM レジスタアクセスについて

	PCM8 は、OPM レジスタをアクセスする場合があります。

	アクセスレジスタは $1B で、システムワーク $09DA を参照して値を決定
	しますので、他のアプリケーションではシステムワークと実際の設定内容
	の喰い違いが起こらないようにする必要があります。

　・PCM8 組み込み制御について

	音源ドライバが独自に ADPCM 処理を行う場合など、後から PCM8 が組み
	込まれると都合が悪い場合は、TRAP #2 のエントリ ( = ($0088).l ) に
	ダミーのアドレスを設定しておくと、PCM8 の組み込みを阻止する事が出
	来ます。

　・PCM8 ヘッダの位置について

	version 0.48 現在、PCM8 の識別ヘッダはロードアドレス先頭にあります
	が、これは将来変更する予定がありますので、例えばヘッダアドレスから
	MCB/PSP を逆算するようなコーディングは避けるようにしてください。


-------------------------------------------------------------------------------
