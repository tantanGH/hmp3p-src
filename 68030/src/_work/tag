

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define TAG_HEADER_SIZE 10

char *read_tag(FILE *fp, int *tag_size) {
    char *tag = NULL;
    int header[TAG_HEADER_SIZE], size;
    int pos = 0;

    // read the tag header
    fread(header, 1, TAG_HEADER_SIZE, fp);

    // check if the tag is valid
    if (strncmp((char *)header, "ID3", 3) != 0) {
        printf("Error: invalid ID3v2 tag.\n");
        return NULL;
    }

    // calculate the tag size
    size = ((header[6] & 0x7f) << 21) | ((header[7] & 0x7f) << 14) | ((header[8] & 0x7f) << 7) | (header[9] & 0x7f);
    *tag_size = size + TAG_HEADER_SIZE;

    // allocate memory for the tag
    tag = (char *)malloc(sizeof(char) * (*tag_size));

    // copy the tag header
    memcpy(tag, header, TAG_HEADER_SIZE);

    // read the rest of the tag
    while (pos < size) {
        int n = fread(tag+TAG_HEADER_SIZE+pos, 1, size-pos, fp);
        if (n == 0) {
            printf("Error: unable to read ID3v2 tag.\n");
            free(tag);
            return NULL;
        }
        pos += n;
    }

    return tag;
}

char *get_frame(char *tag, int tag_size, char *frame_id) {
    char *p = tag + TAG_HEADER_SIZE;

    while (p < tag + tag_size - 10) {
        int frame_size = ((p[4] & 0xff) << 24) | ((p[5] & 0xff) << 16) | ((p[6] & 0xff) << 8) | (p[7] & 0xff);
        if (memcmp(p, frame_id, 4) == 0) {
            char *frame = (char *)malloc(sizeof(char) * (frame_size+1));
            memcpy(frame, p+10, frame_size);
            frame[frame_size] = '\0';
            return frame;
        }
        p += frame_size + 10;
    }

    return NULL;
}

int main(int argc, char *argv[]) {
    char *file_name = argv[1];
    FILE *fp;
    char *tag = NULL;
    int tag_size = 0;

    fp = fopen(file_name, "rb");
    if (fp == NULL) {
        printf("Error: unable to open file.\n");
        return 1;
    }

    // read the ID3v2 tag
    tag = read_tag(fp, &tag_size);
    if (tag == NULL) {
        fclose(fp);
        return 1;
    }

    // extract the music name
    char *music_name = get_frame(tag, tag_size, "TIT2");
    if (music_name != NULL) {
        printf("Music Name: %s\n", music_name);
        free(music_name);
    }

    // extract the artist name
   
T' && tag[pos+1] == 'P' && tag[pos+2] == 'E' && tag[pos+3] == '1')
'T' && tag[pos+1] == 'A' && tag[pos+2] == 'L' && tag[pos+3] == 'B')