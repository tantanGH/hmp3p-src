┌─────────────────────────────────────┐
│                     16bit PCM driver for Mercury-Unit                    │
│              version 0.88 Copyright 1994-1999 by BEL./nenetto            │
└─────────────────────────────────────┘

☆ MercuryDriver.SYS によって拡張される IOCS CALL のテクニカルマニュアル

IOCS call $F4 が拡張されます。しかし番号は将来変更される可能性があります


	MercuryDriverの存在チェック

		clr.l	-(sp)
		DOS	_SUPER
		addq.l	#4,sp

		move.w	#$01f4,-(sp)
		DOS	_INTVCG
		addq.l	#2,sp
		movea.l	d0,a0
		cmpi.l	#'*MD*',-8(a0)

	で一致すれば MercuryDriver であると確認できます

	ちなみに 
	'*MD*/087'
	 ^^^^		ドライバヘッダ
	      ^^^	バージョン
	と、なってます。

───────────────────────────────────────
	呼び出し方

	d1	Mercury命令番号	* 後述
	d2			* Mercury番号によって違います
	d3			*          上に同じ
	a1			*          上に同じ

	moveq.l	#$f4,d0
	trap	#$0f


	Mercury命令

	d1.l	=
			-1	_M_IOCS		IOCS乗っ取り制御

			00	_PCMOUT		PCMデータ出力
			02	_PCMAOUT	PCMデータ出力(アレイチェーンモード)
			06	_PCMSNS		状態の調査
			07	_PCMMOD		PCM実行制御
			08	_MUSTAT		ユニットステータス
			0A	_OPNSET		FM音源レジスタデータの書き込み
			0B	_OPNSNS		FM音源ステータス読み込み
			0C	_OPNINTST	FM音源ICによる割り込み設定

			------------------------ V4 only ---------------------------
			0E	_START		まーきゅりーゆにっとの使用を開始する
			0F	_STOP		まーきゅりーゆにっとの使用を終了する
			------------------------------------------------------------

────────────────────────────────────────

	_PCMOUT		Mercury命令 0	/ IOCS _ADPCMOUT 準拠

	機能
		PCMデータの出力

	入力
		d2.l	再生周波数*256 + 出力モード
		d3.w	出力データの長さ
		a1.l	出力データアドレス

	リターン
		なし

	再生周波数
		0	32    kHz		mono
		1	44.1  kHz		mono
		2	48    kHz		mono
		3	32    kHz		stereo
		4	44.1  kHz		stereo
		5	48    kHz		stereo

		6	16    kHz		mono
		7	22.05 kHz		mono
		8	24    kHz		mono
		9	16    kHz		stereo
		10	22.05 kHz		stereo
		11	24    kHz		stereo

	出力モード
		0	左右ミュート
		1	左出力
		2	右出力
		3	両方

	注意
		DMA のチャンネル #2を使用します
		すでに使用している場合の動作の保証はできません
		（再生が終わると DMA が止まる)


────────────────────────────────────────

	_PCMAOUT	Mercury命令 2	/ IOCS _ADPCMAOUT 準拠

	機能
		アレイチェーンによる PCMデータの出力

	入力
		d2.l	再生周波数*256 + 出力モード
		d3.l	出力データのブロック数
		a1.l	出力データ・チェーンテーブル・アドレス

	リターン
		なし

	チェーンテーブル・アドレス
		0(a1).l		1 番目のデータの先頭アドレス		) 1 ブロック
		4(a1).w		1 番目のデータの長さ (1〜$ffff)		)
		6(a1).l		2 番目のデータの先頭アドレス
		10(a1).w	2 番目のデータの長さ (1〜$ffff)
		   .
		   .
		   .

	再生周波数、出力モードは _PCMOUT と同じ.


────────────────────────────────────────

	_PCMSNS		Mercury命令 6	/ IOCS _ADPCMSNS 準拠

	機能
		PCMの動作状態チェック

	入力
		なし

	リターン
		d0.l	0	何もしていない
			2	出力中 (_PCMOUT)
			$12	出力中 (_PCMAOUT)


────────────────────────────────────────

	_PCMMOD		Mercury命令 7	/ IOCS _ADPCMMOD 準拠

	機能
		PCMの動作を制御

	入力
		d2.l	0	終了
			1	中断
			2	再開
			3	入力モード	入力からのデータがスルーされます
			4	出力モード

	リターン
		なし


────────────────────────────────────────

	_MUSTAT		Mercury命令 0x08

	機能
		Mercury Unit のステータスを得る

	入力
		なし

	リターン
		d0.l

		STATUS ポートの内容がそのまま入る

────────────────────────────────────────

	_OPNSET		Mercury命令 0x0A

	機能
		FM音源レジスタデータの書き込み

	入力
		d2.w	OPN3 * 256 + レジスタアドレス
		d3.b	データ

		OPN3
			0	OPN3 MASTER-0
			1	OPN3 MASTER-1
			2	OPN3 SLAVE-0
			3	OPN3 SLAVE-1
	リターン
		なし

────────────────────────────────────────

	_OPNSNS		Mercury命令 0x0B

	機能
		FM音源ステータス読み込み

	入力
		d2.b	0	OPN3 MASTER-0
			1	OPN3 MASTER-1
			2	OPN3 SLAVE-0
			3	OPN3 SLAVE-1

	リターン
		d0.b

		FM音源ICステータスレジスタの内容

────────────────────────────────────────

	_OPNINTST	Mercury命令 0x0C

	機能
		FM音源ICによる割り込み設定

	入力
		d2.b	割り込みベクタ
		a1.l	割り込み処理アドレス

	リターン
		なし

────────────────────────────────────────

	_START		Mercury命令 0x0E

	機能
		まーきゅりーゆにっとの使用を開始する

	入力
		なし

	リターン
		なし


	満開版 『まーきゅりーゆにっと』を利用する場合は
	IOCS を使う前に必ずコールしなければならない。

────────────────────────────────────────

	_STOP		Mercury命令 0x0F

	機能
		まーきゅりーゆにっとの使用を終了する

	入力
		なし

	リターン
		なし


	満開版 『まーきゅりーゆにっと』を利用し
	なおかつ Mach-2 を利用されている場合
	IOCS 使用終了時にコールした方が良い。

────────────────────────────────────────

	_M_IOCS		Mercury命令 -1

	機能
		IOCSコールの乗っ取り制御

		 $60 _ADPCMOUT
		 $62 _ADPCMAOUT
		 $66 _ADPCMSNS
		 $67 _ADPCMMOD

		以上のコールをフックして、Mercury-Unit に対応させます.
		当然、扱うデータは 16bit でなくてはなりません.

	入力
		d2.l	0	IOCSコールを乗っ取ります
			1	フックされていた IOCSコールを元に戻します
			-1	乗っ取られているか調べます

	リターン
		(d2.l = 0,1)
		d0.l	0	正常終了
			-1	異常終了

		(d2.l = -1)
		d0.l	0	MercuryDriverは IOCSを乗っ取っていない
			-1	既に MercuryDriverによって乗っ取られている


────────────────────────────────────────
	プログラム例をサンプルとしてアーカイブしてありますので参考にして下さい。
